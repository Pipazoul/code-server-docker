apiVersion: apps/v1
kind: Deployment
metadata:
  name: vscode-server
  namespace: vscode-server
  labels:
    app: vscode-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vscode-server
  template:
    metadata:
      labels:
        app: vscode-server
    spec:
      # Specify the node where the pod should run if needed
      # runtimeClassName: nvidia
      # nodeSelector:
      #   preferred-node: mynode
      # tolerations:
      # - key: "gpu"
      #   operator: "Equal"
      #   value: "true"
      #   effect: "NoSchedule"
      securityContext:
        privileged: true  # Required for Docker-in-Docker
      containers:
        - name: vscode-server
          image: yassinsiouda/vscode-server:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8443
              name: vscode
          readinessProbe:
            httpGet:
              path: /
              port: 8443
          env:
            - name: PASSWORD
              value: "password"  # Set your password here
            - name: TZ
              value: "Europe/Paris"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: SUDO_PASSWORD
              value: "password"  # For sudo privileges within the container
            - name: NVIDIA_VISIBLE_DEVICES
              value: all
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: all
          volumeMounts:
            - mountPath: /config
              name: vscode-volume
            - mountPath: /config/workspace
              name: vscode-volume
            - mountPath: /var/run/docker.sock
              name: docker-socket
      volumes:
        - name: vscode-volume
          persistentVolumeClaim:
            claimName: vscode-pv-claim
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
            type: Socket

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vscode-pv-claim
  namespace: vscode-server
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: longhorn-single-replica
  resources:
    requests:
      storage: 30Gi

---
apiVersion: v1
kind: Service
metadata:
  name: vscode-server
  namespace: vscode-server
spec:
  selector:
    app: vscode-server
  ports:
    - name: vscode
      protocol: TCP
      port: 8443
      targetPort: 8443

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vscode-server
  namespace: vscode-server
spec:
  rules:
  - host: mydomain.com
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: vscode-server
              port:
                number: 8443

---
apiVersion: v1
kind: Namespace
metadata:
  name: vscode-server